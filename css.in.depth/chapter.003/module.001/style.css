:root {
  box-sizing: border-box;
  font-size: 1rem;
  font-family: Helvetica, Arial, sans-serif;
  --brand-color: #0072b0;
}

/* 
  This helps us with 3rd party components that may rely on content-box value:

  .some-3rd-pt-comp {
    box-sizing: content-box;
  }
*/
*, ::before, ::after {
  box-sizing: inherit;
}

body {
  background: lightgray;
}

header {
  background: var(--brand-color);
  color: white;
  padding: 1em 2em;
  border-radius: .5em;
  font-size: 1.2rem;
}

/* 
  We need a wrapper container with negative margins to
  counteract the effect of border-spacing prop on the
  outer-edges of the display-table element.
*/
.wrapper {
  margin: 0 -1em;
}

.container {
  /* Equal height columns: use CSS table display */
  display: table;
  /* This is required (table display does not automatically fill the entire horizontal space). */
  width: 100%;  

  /* Margins don't work on table-cell elements. */
  border-spacing: 1em;
}

main {
  /* Fix for IE bug. */
  display: block;
}

.main {
  display: table-cell;

  width: 70%;
  min-height: 15vh;
  vertical-align: top;

  padding: 1em;
  border-radius: .5em;

  background: white;
}

.sidebar {
  display: table-cell;

  /* Don't use magic numbers: use calc() to get it right. */
  width: 30%;
  min-height: 15vh;
  vertical-align: top;

  padding: 1em;
  border-radius: .5em;

  background: white;
}

.sidebar .widget {
  width: 100%;
  background: var(--brand-color);
  color: white;
  margin: .5em auto;
  text-align: center;
  text-transform: uppercase;
  font-weight: bold;
  padding: .3em;
}

.sidebar a {
  display: inline-block;
  text-decoration: none;
  color: var(--brand-color);
  font-weight: bold;
  margin-top: .5em;
  padding: .5em;
}